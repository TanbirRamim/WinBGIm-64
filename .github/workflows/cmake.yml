name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2
#     - name: choco_install
#       run: choco install mingw --version=11.2.0
      
    - name: Cache GCC
      uses: actions/cache@v1
      id: cache-gcc
      with:
        path: C:\ProgramData\chocolatey\lib
        key: choco-cache-mingw
        restore-keys: |
          choco-cache-mingw
          
#     - run: choco install mingw --version=11.2.0 -y
#       if: steps.cache-gcc.outputs.cache-hit != 'true'
      
    - name: Install gcc
      if: steps.cache-gcc.outputs.cache-hit != 'true'
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install mingw --force --version=11.2.0 -y
        
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G "MinGW Makefiles" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    
#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C ${{env.BUILD_TYPE}}
      
